{"version":3,"sources":["components/Header.js","components/StatesStats.js","components/IndiaStats.js","components/CoronaData.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","windowGlobal","window","useState","pageYOffset","position","setPosition","visible","setVisible","useEffect","handleScroll","temp","addEventListener","removeEventListener","handleSidebar","navToggle","document","getElementById","sidebarNav","classList","toggle","className","id","aria-label","onClick","href","StatesStats","obj","active","confirmed","deaths","lastupdatedtime","recovered","state","end","parseInt","useEasing","duration","IndiaStats","latest","pastDataArr","arr","data","i","length","dailyconfirmed","date","push","getPreviousData","totalconfirmed","totaldeceased","totalrecovered","confirmedDifference","activeDifference","recoveredDifference","deathsDifference","differenceNumber","value","isMoreBad","CoronaData","indiaCovidData","setIndiaCovidData","statewiseData","setStatewiseData","indiaData","setIndiaData","React","searchTerm","setSearchTerm","searchResults","setSearchResults","showStates","setShowStates","display","setDisplay","api","a","fetch","response","json","statewise","console","log","fetchData","filterData","term","statesWithoutTotal","filter","stateArr","toLowerCase","includes","anArr","arritem","indiaDataStateObj","Object","values","cases_time_series","key","renderIndiaData","style","textAlign","type","placeholder","onChange","e","target","margin","padding","backgroundColor","color","outline","border","borderRadius","fontSize","map","item","index","whyDidYouRender","Footer","rel","onlyLogs","titleColor","diffNameColor","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9c928ddc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport \"./Header.css\"\r\n\r\nconst Header = () => {\r\n  const windowGlobal = typeof window !== \"undefined\" && window\r\n  let [position, setPosition] = useState(windowGlobal.pageYOffset)\r\n  let [visible, setVisible] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      let temp = windowGlobal.pageYOffset\r\n\r\n      setVisible(position > temp)\r\n      setPosition(temp)\r\n    }\r\n    windowGlobal.addEventListener(\"scroll\", handleScroll)\r\n    return () => {\r\n      windowGlobal.removeEventListener(\"scroll\", handleScroll)\r\n    }\r\n  })\r\n\r\n  const handleSidebar = () => {\r\n    const navToggle = document.getElementById(\"nav-toggle\")\r\n    const sidebarNav = document.getElementById(\"nav-list\")\r\n    navToggle.classList.toggle(\"animate-toggle\")\r\n    sidebarNav.classList.toggle(\"active\")\r\n  }\r\n\r\n  return (\r\n    <header className={!visible ? \"hide-header-navbar\" : \"show-header-navbar\"}>\r\n      <nav id=\"navbar\">\r\n        <button\r\n          id=\"nav-toggle\"\r\n          aria-label=\"Navigation Menu Button\"\r\n          onClick={handleSidebar}\r\n        >\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n        </button>\r\n        <ul id=\"nav-list\">\r\n          <li>\r\n            <a href=\"/\" id=\"brand\">\r\n              COVID-19 Live Stats\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"#world\"\r\n              className=\"navlinks\"\r\n              aria-label=\"\"\r\n              onClick={handleSidebar}\r\n            >\r\n              World\r\n            </a>\r\n          </li>\r\n\r\n          <li>\r\n            <a\r\n              href=\"#resources\"\r\n              className=\"navlinks\"\r\n              aria-label=\"\"\r\n              onClick={handleSidebar}\r\n            >\r\n              Resources\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"#about\"\r\n              aria-label=\"\"\r\n              className=\"navlinks\"\r\n              onClick={handleSidebar}\r\n            >\r\n              About\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport CountUp from \"react-countup\"\r\nimport \"./Stats.css\"\r\n\r\nexport const StatesStats = ({ obj }) => {\r\n  const { active, confirmed, deaths, lastupdatedtime, recovered, state } = obj\r\n\r\n  if (state === \"Total\") {\r\n    return (\r\n      <div id=\"india\">\r\n        <ul className=\"stats-list\">\r\n          <li className=\"country-india\">India</li>\r\n          <li className=\"confirmed-cases-india\">\r\n            Confirmed:\r\n            <CountUp end={parseInt(confirmed)} useEasing={false} duration={1} />\r\n          </li>\r\n          <li className=\"active-cases-india\">\r\n            Active:\r\n            <CountUp end={parseInt(active)} useEasing={false} duration={1} />\r\n          </li>\r\n          <li className=\"recovered-cases-india\">\r\n            Recovered:\r\n            <CountUp end={parseInt(recovered)} useEasing={false} duration={1} />\r\n          </li>\r\n          <li className=\"deaths-india\">\r\n            Deaths:\r\n            <CountUp end={parseInt(deaths)} useEasing={false} duration={1} />\r\n          </li>\r\n          <li className=\"last-updated\">Last Updated: {lastupdatedtime}</li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  } else if (parseInt(confirmed) > 0) {\r\n    return (\r\n      <ul className=\"states-stats-list\">\r\n        <li className=\"state-name\">{state === \"Total\" ? \"India\" : state}</li>\r\n        <li className=\"confirmed-cases\">Confirmed: {confirmed}</li>\r\n        <li className=\"active-cases\">Active: {active}</li>\r\n        <li className=\"recovered-cases\">Recovered: {recovered}</li>\r\n        <li className=\"deaths\">Deaths: {deaths}</li>\r\n      </ul>\r\n    )\r\n  } else return null\r\n}\r\n","import React from \"react\"\r\nimport CountUp from \"react-countup\"\r\nimport { ArrowUp, ArrowDown } from \"styled-icons/foundation\"\r\nimport \"./Stats.css\"\r\n\r\nexport const IndiaStats = ({ latest, pastDataArr }) => {\r\n  let { active, confirmed, deaths, lastupdatedtime, recovered, state } = latest\r\n\r\n  // let pastDataArrLen = pastDataArr.length\r\n  // console.log(pastDataArr[pastDataArrLen - 2].dailyconfirmed)\r\n  // console.log(pastDataArr[pastDataArrLen - 1].dailyconfirmed)\r\n\r\n  function getPreviousData(arr) {\r\n    let data = []\r\n    if (arr) {\r\n      for (let i = arr.length - 1; i >= 0; i--) {\r\n        if (arr[i].dailyconfirmed && arr[i].date) {\r\n          data.push(arr[i])\r\n        }\r\n      }\r\n      return data\r\n    }\r\n  }\r\n  const allPreviousData = getPreviousData(pastDataArr)\r\n  let {\r\n    // dailyconfirmed,\r\n    // dailydeceased,\r\n    // dailyrecovered,\r\n    // date,\r\n    totalconfirmed,\r\n    totaldeceased,\r\n    totalrecovered,\r\n  } = allPreviousData[0]\r\n\r\n  // Difference Variables\r\n\r\n  let confirmedDifference = parseInt(confirmed) - parseInt(totalconfirmed)\r\n  let activeDifference =\r\n    parseInt(active) - parseInt(totalconfirmed - totaldeceased - totalrecovered)\r\n  let recoveredDifference = parseInt(recovered - totalrecovered)\r\n  let deathsDifference = parseInt(deaths - totaldeceased)\r\n\r\n  // confirmedDifference = 0\r\n  // activeDifference = 0\r\n  // recoveredDifference = 0\r\n\r\n  // To handle deaths, confirmed better as they cannot decrease\r\n\r\n  if (deathsDifference < 0) {\r\n    deathsDifference = 0\r\n\r\n    if (deaths < totaldeceased) {\r\n      totaldeceased = deaths\r\n    } else if (deaths > totaldeceased) {\r\n      deaths = totaldeceased\r\n    }\r\n  }\r\n\r\n  if (confirmedDifference < 0) {\r\n    confirmedDifference = 0\r\n\r\n    if (confirmed < totalconfirmed) {\r\n      totalconfirmed = confirmed\r\n    } else if (confirmed > totalconfirmed) {\r\n      confirmed = totalconfirmed\r\n    }\r\n  }\r\n\r\n  function differenceNumber(value, isMoreBad) {\r\n    if (value === 0) {\r\n      return <span className=\"good\">(0)</span>\r\n    } else if (isMoreBad === true) {\r\n      if (value > 0) {\r\n        return (\r\n          <span className=\"bad\">\r\n            ( <CountUp end={value} useEasing={false} duration={1} />\r\n            <ArrowUp className=\"arrow\" /> )\r\n          </span>\r\n        )\r\n      } else if (value < 0) {\r\n        return (\r\n          <span className=\"good\">\r\n            ( <CountUp end={value} useEasing={false} duration={1} />\r\n            <ArrowDown className=\"arrow\" /> )\r\n          </span>\r\n        )\r\n      }\r\n    } else if (isMoreBad === false) {\r\n      if (value > 0) {\r\n        return (\r\n          <span className=\"good\">\r\n            ( <CountUp end={value} useEasing={false} duration={1} />\r\n            <ArrowUp className=\"arrow\" /> )\r\n          </span>\r\n        )\r\n      } else if (value < 0) {\r\n        return (\r\n          <span className=\"bad\">\r\n            ( <CountUp end={value} useEasing={false} duration={1} />\r\n            <ArrowDown className=\"arrow\" /> )\r\n          </span>\r\n        )\r\n      }\r\n    } else return null\r\n  }\r\n\r\n  if (state === \"Total\") {\r\n    return (\r\n      <>\r\n        <h2 className=\"country-india\">INDIA</h2>\r\n        <div id=\"india\">\r\n          <ul className=\"stats-list\">\r\n            <li className=\"day\">Today</li>\r\n            <li className=\"numbers\">\r\n              <CountUp\r\n                end={parseInt(confirmed)}\r\n                useEasing={false}\r\n                duration={1}\r\n              />{\" \"}\r\n              {differenceNumber(confirmedDifference, true)}\r\n            </li>\r\n            <li className=\"confirmed-cases-india\">Confirmed</li>\r\n            <hr className=\"horizontal-rule\" />\r\n\r\n            <li className=\"numbers\">\r\n              <CountUp end={parseInt(active)} useEasing={false} duration={1} />{\" \"}\r\n              {differenceNumber(activeDifference, true)}\r\n            </li>\r\n            <li className=\"active-cases-india\">Active</li>\r\n            <hr className=\"horizontal-rule\" />\r\n\r\n            <li className=\"numbers\">\r\n              <CountUp\r\n                end={parseInt(recovered)}\r\n                useEasing={false}\r\n                duration={1}\r\n              />{\" \"}\r\n              {differenceNumber(recoveredDifference, false)}\r\n            </li>\r\n            <li className=\"recovered-cases-india\">Recovered </li>\r\n            <hr className=\"horizontal-rule\" />\r\n            <li className=\"numbers\">\r\n              <CountUp end={parseInt(deaths)} useEasing={false} duration={1} />{\" \"}\r\n              {differenceNumber(deathsDifference, true)}\r\n            </li>\r\n            <li className=\"deaths-india\">Deaths</li>\r\n          </ul>\r\n\r\n          <ul className=\"stats-list\">\r\n            <li className=\"day\">Yesterday</li>\r\n\r\n            <li className=\"numbers\">\r\n              <CountUp\r\n                end={parseInt(totalconfirmed)}\r\n                useEasing={false}\r\n                duration={1}\r\n              />\r\n            </li>\r\n            <li className=\"confirmed-cases-india\">Confirmed</li>\r\n            <hr className=\"horizontal-rule\" />\r\n\r\n            <li className=\"numbers\">\r\n              <CountUp\r\n                end={parseInt(totalconfirmed - totaldeceased - totalrecovered)}\r\n                useEasing={false}\r\n                duration={1}\r\n              />\r\n            </li>\r\n            <li className=\"active-cases-india\">Active</li>\r\n            <hr className=\"horizontal-rule\" />\r\n\r\n            <li className=\"numbers\">\r\n              <CountUp\r\n                end={parseInt(totalrecovered)}\r\n                useEasing={false}\r\n                duration={1}\r\n              />\r\n            </li>\r\n            <li className=\"recovered-cases-india\">Recovered</li>\r\n            <hr className=\"horizontal-rule\" />\r\n\r\n            <li className=\"numbers\">\r\n              <CountUp\r\n                end={parseInt(totaldeceased)}\r\n                useEasing={false}\r\n                duration={1}\r\n              />\r\n            </li>\r\n            <li className=\"deaths-india\">Deaths</li>\r\n          </ul>\r\n        </div>\r\n        <p className=\"last-updated\">Last Updated: {lastupdatedtime}</p>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport { StatesStats } from \"./StatesStats\"\r\nimport { IndiaStats } from \"./IndiaStats\"\r\nimport \"./CoronaData.css\"\r\n\r\nconst CoronaData = () => {\r\n  const [indiaCovidData, setIndiaCovidData] = useState()\r\n  const [statewiseData, setStatewiseData] = useState()\r\n  const [indiaData, setIndiaData] = useState()\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\")\r\n  const [searchResults, setSearchResults] = React.useState([])\r\n  const [showStates, setShowStates] = useState(false)\r\n  const [display, setDisplay] = useState(\"none\")\r\n  const handleChange = (e) => {\r\n    // console.log(e.target.value)\r\n    setSearchTerm(e.target.value.toLowerCase())\r\n  }\r\n\r\n  const api = \"https://api.covid19india.org/data.json\"\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(api)\r\n        const data = await response.json()\r\n        setIndiaCovidData(data)\r\n        setStatewiseData(data.statewise)\r\n        setIndiaData(data.statewise[0])\r\n        //   .then(({ statewise }) => [...statewise])\r\n        // setStatewiseData(data)\r\n        // setIndiaData(data[0])\r\n      } catch (err) {\r\n        // setLoading(null)\r\n        console.log(\"Error fetching: \", err)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (statewiseData) {\r\n      setSearchResults(filterData(searchTerm))\r\n    }\r\n  }, [searchTerm])\r\n\r\n  // console.log(\"Coronadata mounted\")\r\n\r\n  const renderIndiaData = (indiaDataStateObj) => {\r\n    if (indiaData) {\r\n      let pastDataArr = Object.values(indiaCovidData.cases_time_series)\r\n      // console.log(pastDataArr)\r\n      return (\r\n        <IndiaStats\r\n          key=\"India\"\r\n          latest={indiaDataStateObj}\r\n          pastDataArr={pastDataArr}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  function renderIndianStatesData() {\r\n    let statewiseInfo\r\n    if (indiaCovidData && statewiseData) {\r\n      statewiseInfo = statewiseData.map((item, index) =>\r\n        index > 0 ? <StatesStats key={index} obj={item} /> : null\r\n      )\r\n    }\r\n    return statewiseInfo\r\n  }\r\n  // console.log(statewiseData)\r\n\r\n  const filterData = (term) => {\r\n    if (statewiseData) {\r\n      let statesWithoutTotal = statewiseData.filter(\r\n        (stateArr) => !stateArr.state.toLowerCase().includes(\"total\")\r\n      )\r\n      // console.log(statesWithoutTotal)\r\n\r\n      let anArr = []\r\n      statesWithoutTotal.filter((arritem) => {\r\n        if (arritem.state.toLowerCase().includes(term)) {\r\n          anArr.push(arritem)\r\n        }\r\n      })\r\n      return anArr\r\n    }\r\n  }\r\n\r\n  // console.log(statesWithFilter)\r\n\r\n  return (\r\n    <div>\r\n      {indiaData ? (\r\n        renderIndiaData(indiaData)\r\n      ) : (\r\n        <h3 style={{ textAlign: \"center\" }}>loading...</h3>\r\n      )}\r\n      <button\r\n        id=\"states-toggle-button\"\r\n        onClick={() => {\r\n          showStates ? setDisplay(\"none\") : setDisplay(\"block\")\r\n          showStates ? setShowStates(false) : setShowStates(true)\r\n          setSearchTerm(\"\")\r\n          setSearchResults(filterData(\"\"))\r\n        }}\r\n      >\r\n        {showStates ? \"Hide State wise Info\" : \"Show State wise Info\"}\r\n      </button>\r\n      {statewiseData ? (\r\n        <>\r\n          {showStates && (\r\n            <p className=\"show-states-note\">\r\n              (Note: states/union territories without any reported/confirmed\r\n              COVID-19 cases not displayed)\r\n            </p>\r\n          )}\r\n          <input\r\n            id=\"states-search\"\r\n            type=\"text\"\r\n            placeholder=\"Search state...\"\r\n            value={searchTerm}\r\n            onChange={handleChange}\r\n            style={{\r\n              display: display,\r\n              margin: \"1rem auto\",\r\n              padding: \"0.5rem 1rem\",\r\n              backgroundColor: \"#121212\",\r\n              color: \"#bbbbdd\",\r\n              textAlign: \"center\",\r\n              outline: \"none\",\r\n              border: \"2px solid #bbbbdd\",\r\n              borderRadius: \"5px\",\r\n              fontSize: \"1.1rem\",\r\n            }}\r\n          />\r\n          <div id=\"states-container\">\r\n            {showStates &&\r\n              searchResults &&\r\n              searchResults.map((item, index) => (\r\n                <StatesStats key={index} obj={item} />\r\n              ))}\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nCoronaData.whyDidYouRender = true\r\n\r\nexport default CoronaData\r\n","import React from \"react\"\r\nimport \"./Footer.css\"\r\nexport const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>\r\n        Developed by{\" \"}\r\n        <a\r\n          href=\"https://abhishekakade.github.io/\"\r\n          target=\"_blank\"\r\n          rel=\"nofollow noopener noreferrer\"\r\n          aria-label=\"Abhishek's GitHub Profile\"\r\n          className=\"tooltip profile-link\"\r\n        >\r\n          Abhishek Kakade\r\n        </a>\r\n      </p>\r\n      <p>\r\n        API by{\" \"}\r\n        <a\r\n          href=\"https://github.com/covid19india/covid19india\"\r\n          target=\"_blank\"\r\n          rel=\"nofollow noopener noreferrer\"\r\n          aria-label=\"covid19india GitHub repository\"\r\n          className=\"tooltip profile-link\"\r\n        >\r\n          covid19india\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport \"./App.css\"\r\nimport Header from \"./components/Header\"\r\nimport CoronaData from \"./components/CoronaData\"\r\nimport { Footer } from \"./components/Footer\"\r\nimport whyDidYouRender from \"@welldone-software/why-did-you-render\"\r\n\r\nwhyDidYouRender(React, {\r\n  onlyLogs: true,\r\n  titleColor: \"green\",\r\n  diffNameColor: \"darkturquoise\"\r\n})\r\n\r\nCoronaData.whyDidYouRender = true\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 id=\"title\">COVID-19 Live Stats</h1>\r\n      <Header />\r\n      <CoronaData />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\n// import whyDidYouRender from \"@welldone-software/why-did-you-render\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\n// whyDidYouRender(React, {\r\n//   onlyLogs: true,\r\n//   titleColor: \"green\",\r\n//   diffNameColor: \"darkturquoise\"\r\n// });\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  const whyDidYouRender = require(\"@welldone-software/why-did-you-render\")\r\n  // const ReactRedux = require(\"react-redux\")\r\n  whyDidYouRender(React, {\r\n    trackAllPureComponents: true,\r\n    // trackExtraHooks: [[ReactRedux, \"useSelector\"]]\r\n  })\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}